from z3 import *

s: Solver = SolverFor("QF_LIA")
set_param('model.completion', True)

A: Int = Int('A')
s.add(A>=0)
At: Int = Int('At')
s.add(At == 2)
B: Int = Int('B')
s.add(B>=0)
Bt: Int = Int('Bt')
s.add(Bt == 1)
C: Int = Int('C')
s.add(C>=0)
Ct: Int = Int('Ct')
s.add(Ct==2)
D: Int = Int('D')
s.add(D>=0)
Dt: Int = Int('Dt')
s.add(Dt == 2)
E: Int = Int('E')
s.add(E>=0)
Et: Int = Int('Et')
s.add(Et==7)
F: Int = Int('F')
s.add(F>=0)
Ft: Int = Int('Ft')
s.add(Ft == 5)

s.add(Or(((A+At)<=C), (C+Ct)<=A))
s.add(Or(((B+Bt)<=D), (D+Dt)<=B))
s.add(Or(((B+Bt)<=E), (E+Et)<=B))
s.add(Or(((D+Dt)<=E), (E+Et)<=D))
s.add(And(((D+Dt)<=F), (E+Et)<=F))
s.add((A+At) <= B)

End: Int = Int('End')
s.add(End==14)
s.add((A+At) <= End)
s.add((B+Bt) <= End)
s.add((C+Ct) <= End)
s.add((D+Dt) <= End)
s.add((E+Et) <= End)
s.add((F+Ft) <= End)

print(s.check())
print(s.model())