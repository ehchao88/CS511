============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 83385 was started by ericchao on Johns-MBP.home,
Sun Nov 29 12:14:58 2020
The command was "/Users/ericchao/LADR-2009-11A/bin/./prover9".
============================== end of head ===========================

============================== INPUT =================================

formulas(assumptions).
poset(x,x).
poset(x,y) & poset(y,x) -> x = y.
poset(x,y) & poset(y,z) -> poset(x,z).
poset(B,x).
poset(x,T).
poset(pl(x,y),z) <-> poset(x,z) & poset(y,z).
poset(z,mu(x,y)) <-> poset(z,x) & poset(z,y).
mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).
pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).
poset(mu(x,y),z) <-> poset(x,squig(y,z)).
squig(x,mu(y,z)) = mu(squig(x,y),squig(y,z)).
end_of_list.

formulas(goals).
poset(y,squig(x,y)).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 poset(x,y) & poset(y,x) -> x = y # label(non_clause).  [assumption].
2 poset(x,y) & poset(y,z) -> poset(x,z) # label(non_clause).  [assumption].
3 poset(pl(x,y),z) <-> poset(x,z) & poset(y,z) # label(non_clause).  [assumption].
4 poset(z,mu(x,y)) <-> poset(z,x) & poset(z,y) # label(non_clause).  [assumption].
5 poset(mu(x,y),z) <-> poset(x,squig(y,z)) # label(non_clause).  [assumption].
6 poset(y,squig(x,y)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
poset(x,x).  [assumption].
-poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].
-poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].
poset(B,x).  [assumption].
poset(x,T).  [assumption].
-poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
-poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].
-poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
-poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].
poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].
mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].
pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].
-poset(mu(x,y),z) | poset(x,squig(y,z)).  [clausify(5)].
poset(mu(x,y),z) | -poset(x,squig(y,z)).  [clausify(5)].
squig(x,mu(y,z)) = mu(squig(x,y),squig(y,z)).  [assumption].
-poset(c1,squig(c2,c1)).  [deny(6)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, poset ]).
Function symbol precedence:  function_order([ B, T, c1, c2, mu, pl, squig ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(hyper_resolution).  % (nonunit Horn with equality)
    % set(hyper_resolution) -> set(pos_hyper_resolution).
  % set(neg_ur_resolution).  % (nonunit Horn with equality)
  % assign(para_lit_limit, 3).  % (nonunit Horn with equality)

Auto_process settings:  (no changes).

kept:      7 poset(x,x).  [assumption].
kept:      8 -poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].
kept:      9 -poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].
kept:      10 poset(B,x).  [assumption].
kept:      11 poset(x,T).  [assumption].
kept:      12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
kept:      13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
kept:      14 poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].
kept:      15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
kept:      16 -poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].
kept:      17 poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].
           18 mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].
kept:      19 pl(mu(x,y),mu(x,z)) = mu(x,pl(y,z)).  [copy(18),flip(a)].
kept:      20 pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].
kept:      21 -poset(mu(x,y),z) | poset(x,squig(y,z)).  [clausify(5)].
kept:      22 poset(mu(x,y),z) | -poset(x,squig(y,z)).  [clausify(5)].
kept:      23 squig(x,mu(y,z)) = mu(squig(x,y),squig(y,z)).  [assumption].
kept:      24 -poset(c1,squig(c2,c1)).  [deny(6)].
kept:      25 mu(pl(mu(x,y),x),pl(mu(x,y),z)) = mu(x,pl(y,z)).  [back_rewrite(19),rewrite([20(3)])].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
7 poset(x,x).  [assumption].
8 -poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].
9 -poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].
10 poset(B,x).  [assumption].
11 poset(x,T).  [assumption].
12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
14 poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].
15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
16 -poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].
17 poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].
20 pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].
21 -poset(mu(x,y),z) | poset(x,squig(y,z)).  [clausify(5)].
22 poset(mu(x,y),z) | -poset(x,squig(y,z)).  [clausify(5)].
23 squig(x,mu(y,z)) = mu(squig(x,y),squig(y,z)).  [assumption].
24 -poset(c1,squig(c2,c1)).  [deny(6)].
25 mu(pl(mu(x,y),x),pl(mu(x,y),z)) = mu(x,pl(y,z)).  [back_rewrite(19),rewrite([20(3)])].
end_of_list.

formulas(demodulators).
20 pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].
25 mu(pl(mu(x,y),x),pl(mu(x,y),z)) = mu(x,pl(y,z)).  [back_rewrite(19),rewrite([20(3)])].
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=3): 7 poset(x,x).  [assumption].

given #2 (I,wt=9): 8 -poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].

given #3 (I,wt=9): 9 -poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].

given #4 (I,wt=3): 10 poset(B,x).  [assumption].

given #5 (I,wt=3): 11 poset(x,T).  [assumption].

given #6 (I,wt=8): 12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].

given #7 (I,wt=8): 13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].

given #8 (I,wt=11): 14 poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].

given #9 (I,wt=8): 15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].

given #10 (I,wt=8): 16 -poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].

given #11 (I,wt=11): 17 poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].

given #12 (I,wt=13): 20 pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].

given #13 (I,wt=10): 21 -poset(mu(x,y),z) | poset(x,squig(y,z)).  [clausify(5)].

given #14 (I,wt=10): 22 poset(mu(x,y),z) | -poset(x,squig(y,z)).  [clausify(5)].

given #15 (I,wt=13): 23 squig(x,mu(y,z)) = mu(squig(x,y),squig(y,z)).  [assumption].

given #16 (I,wt=5): 24 -poset(c1,squig(c2,c1)).  [deny(6)].

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.01) seconds.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 10.000.
% Given clauses 16.

4 poset(z,mu(x,y)) <-> poset(z,x) & poset(z,y) # label(non_clause).  [assumption].
5 poset(mu(x,y),z) <-> poset(x,squig(y,z)) # label(non_clause).  [assumption].
6 poset(y,squig(x,y)) # label(non_clause) # label(goal).  [goal].
7 poset(x,x).  [assumption].
15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
21 -poset(mu(x,y),z) | poset(x,squig(y,z)).  [clausify(5)].
24 -poset(c1,squig(c2,c1)).  [deny(6)].
32 poset(mu(x,y),x).  [hyper(15,a,7,a)].
52 -poset(mu(c1,c2),c1).  [ur(21,b,24,a)].
53 $F.  [resolve(52,a,32,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=16. Generated=88. Kept=45. proofs=1.
Usable=16. Sos=27. Demods=2. Limbo=0, Disabled=18. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=43. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=3 (0 lex), Back_demodulated=1. Back_unit_deleted=0.
Demod_attempts=380. Demod_rewrites=9.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=30. Nonunit_bsub_feature_tests=47.
Megabytes=0.13.
User_CPU=0.01, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 83385 exit (max_proofs) Sun Nov 29 12:14:58 2020
