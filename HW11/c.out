============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 81260 was started by ericchao on Johns-MBP.home,
Sat Nov 28 21:25:18 2020
The command was "/Users/ericchao/LADR-2009-11A/bin/./prover9".
============================== end of head ===========================

============================== INPUT =================================

formulas(assumptions).
poset(x,x).
poset(x,y) & poset(y,x) -> x = y.
poset(x,y) & poset(y,z) -> poset(x,z).
poset(B,x).
poset(x,T).
poset(pl(x,y),z) <-> poset(x,z) & poset(y,z).
poset(z,mu(x,y)) <-> poset(z,x) & poset(z,y).
mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).
pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).
poset(x,pl(y,z)) -> poset(x,y) | poset(x,z).
end_of_list.

formulas(goals).
(all x all y (poset(x,y) | poset(y,x))).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 poset(x,y) & poset(y,x) -> x = y # label(non_clause).  [assumption].
2 poset(x,y) & poset(y,z) -> poset(x,z) # label(non_clause).  [assumption].
3 poset(pl(x,y),z) <-> poset(x,z) & poset(y,z) # label(non_clause).  [assumption].
4 poset(z,mu(x,y)) <-> poset(z,x) & poset(z,y) # label(non_clause).  [assumption].
5 poset(x,pl(y,z)) -> poset(x,y) | poset(x,z) # label(non_clause).  [assumption].
6 (all x all y (poset(x,y) | poset(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
poset(x,x).  [assumption].
-poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].
-poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].
poset(B,x).  [assumption].
poset(x,T).  [assumption].
-poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
-poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].
-poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
-poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].
poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].
mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].
pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].
-poset(x,pl(y,z)) | poset(x,y) | poset(x,z).  [clausify(5)].
-poset(c1,c2).  [deny(6)].
-poset(c2,c1).  [deny(6)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, poset ]).
Function symbol precedence:  function_order([ B, T, c1, c2, pl, mu ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      7 poset(x,x).  [assumption].
kept:      8 -poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].
kept:      9 -poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].
kept:      10 poset(B,x).  [assumption].
kept:      11 poset(x,T).  [assumption].
kept:      12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
kept:      13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
kept:      14 poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].
kept:      15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
kept:      16 -poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].
kept:      17 poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].
kept:      18 mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].
           19 pl(x,mu(y,z)) = mu(pl(x,y),pl(x,z)).  [assumption].
kept:      20 pl(mu(pl(x,y),x),mu(pl(x,y),z)) = pl(x,mu(y,z)).  [copy(19),rewrite([18(5)]),flip(a)].
kept:      21 -poset(x,pl(y,z)) | poset(x,y) | poset(x,z).  [clausify(5)].
kept:      22 -poset(c1,c2).  [deny(6)].
kept:      23 -poset(c2,c1).  [deny(6)].
kept:      24 poset(pl(x,x),y) | -poset(x,y).  [factor(14,b,c)].
kept:      25 poset(x,mu(y,y)) | -poset(x,y).  [factor(17,b,c)].
kept:      26 -poset(x,pl(y,y)) | poset(x,y).  [factor(21,b,c)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
7 poset(x,x).  [assumption].
8 -poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].
9 -poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].
10 poset(B,x).  [assumption].
11 poset(x,T).  [assumption].
12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
14 poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].
15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].
16 -poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].
17 poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].
18 mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].
20 pl(mu(pl(x,y),x),mu(pl(x,y),z)) = pl(x,mu(y,z)).  [copy(19),rewrite([18(5)]),flip(a)].
21 -poset(x,pl(y,z)) | poset(x,y) | poset(x,z).  [clausify(5)].
22 -poset(c1,c2).  [deny(6)].
23 -poset(c2,c1).  [deny(6)].
24 poset(pl(x,x),y) | -poset(x,y).  [factor(14,b,c)].
25 poset(x,mu(y,y)) | -poset(x,y).  [factor(17,b,c)].
26 -poset(x,pl(y,y)) | poset(x,y).  [factor(21,b,c)].
end_of_list.

formulas(demodulators).
18 mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].
20 pl(mu(pl(x,y),x),mu(pl(x,y),z)) = pl(x,mu(y,z)).  [copy(19),rewrite([18(5)]),flip(a)].
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=3): 7 poset(x,x).  [assumption].

given #2 (I,wt=9): 8 -poset(x,y) | -poset(y,x) | y = x.  [clausify(1)].

given #3 (I,wt=9): 9 -poset(x,y) | -poset(y,z) | poset(x,z).  [clausify(2)].

given #4 (I,wt=3): 10 poset(B,x).  [assumption].

given #5 (I,wt=3): 11 poset(x,T).  [assumption].

given #6 (I,wt=8): 12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].

given #7 (I,wt=8): 13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].

given #8 (I,wt=11): 14 poset(pl(x,y),z) | -poset(x,z) | -poset(y,z).  [clausify(3)].

given #9 (I,wt=8): 15 -poset(x,mu(y,z)) | poset(x,y).  [clausify(4)].

given #10 (I,wt=8): 16 -poset(x,mu(y,z)) | poset(x,z).  [clausify(4)].

given #11 (I,wt=11): 17 poset(x,mu(y,z)) | -poset(x,y) | -poset(x,z).  [clausify(4)].

given #12 (I,wt=13): 18 mu(x,pl(y,z)) = pl(mu(x,y),mu(x,z)).  [assumption].

given #13 (I,wt=17): 20 pl(mu(pl(x,y),x),mu(pl(x,y),z)) = pl(x,mu(y,z)).  [copy(19),rewrite([18(5)]),flip(a)].

given #14 (I,wt=11): 21 -poset(x,pl(y,z)) | poset(x,y) | poset(x,z).  [clausify(5)].

given #15 (I,wt=3): 22 -poset(c1,c2).  [deny(6)].

given #16 (I,wt=3): 23 -poset(c2,c1).  [deny(6)].

given #17 (I,wt=8): 24 poset(pl(x,x),y) | -poset(x,y).  [factor(14,b,c)].

given #18 (I,wt=8): 25 poset(x,mu(y,y)) | -poset(x,y).  [factor(17,b,c)].

given #19 (I,wt=8): 26 -poset(x,pl(y,y)) | poset(x,y).  [factor(21,b,c)].

given #20 (A,wt=6): 27 -poset(x,B) | poset(x,y).  [resolve(10,a,9,b)].

given #21 (F,wt=3): 60 -poset(c1,B).  [ur(9,b,10,a,c,22,a)].

given #22 (F,wt=3): 61 -poset(T,c2).  [ur(9,a,11,a,c,22,a)].

given #23 (F,wt=3): 67 -poset(c2,B).  [ur(9,b,10,a,c,23,a)].

given #24 (F,wt=3): 68 -poset(T,c1).  [ur(9,a,11,a,c,23,a)].

given #25 (T,wt=5): 31 poset(x,pl(x,y)).  [resolve(12,a,7,a)].

given #26 (T,wt=5): 32 poset(x,pl(y,x)).  [resolve(13,a,7,a)].

given #27 (T,wt=5): 37 poset(mu(x,y),x).  [resolve(15,a,7,a)].

given #28 (T,wt=5): 38 poset(mu(x,y),y).  [resolve(16,a,7,a)].

given #29 (A,wt=6): 28 -poset(x,B) | B = x.  [resolve(10,a,8,b)].

given #30 (F,wt=3): 79 -poset(T,B).  [ur(9,a,11,a,c,60,a)].

given #31 (F,wt=5): 55 -poset(c1,pl(c2,c2)).  [ur(21,b,22,a,c,22,a)].

given #32 (F,wt=5): 56 -poset(c1,mu(x,c2)).  [ur(16,b,22,a)].

given #33 (F,wt=5): 57 -poset(c1,mu(c2,x)).  [ur(15,b,22,a)].

given #34 (T,wt=5): 53 poset(pl(x,x),x).  [factor(51,a,b)].

given #35 (T,wt=5): 70 poset(x,mu(T,T)).  [resolve(25,b,11,a)].

given #36 (T,wt=5): 71 poset(x,mu(x,x)).  [resolve(25,b,7,a)].

given #37 (T,wt=5): 147 mu(x,B) = B.  [resolve(28,a,38,a),flip(a)].

given #38 (A,wt=6): 29 -poset(T,x) | poset(y,x).  [resolve(11,a,9,a)].

given #39 (F,wt=5): 58 -poset(pl(x,c1),c2).  [ur(13,b,22,a)].

given #40 (F,wt=5): 59 -poset(pl(c1,x),c2).  [ur(12,b,22,a)].

given #41 (F,wt=5): 63 -poset(c2,mu(x,c1)).  [ur(16,b,23,a)].

given #42 (F,wt=5): 64 -poset(c2,mu(c1,x)).  [ur(15,b,23,a)].

given #43 (T,wt=5): 148 mu(B,x) = B.  [resolve(28,a,37,a),flip(a)].

given #44 (T,wt=5): 198 pl(x,x) = x.  [resolve(53,a,8,b),unit_del(a,31)].

given #45 (T,wt=5): 216 mu(x,x) = x.  [resolve(71,a,8,b),flip(b),unit_del(a,37)].

given #46 (T,wt=5): 219 poset(x,pl(y,T)).  [resolve(29,a,32,a)].

given #47 (A,wt=6): 30 -poset(T,x) | T = x.  [resolve(11,a,8,b),flip(b)].

given #48 (F,wt=5): 65 -poset(pl(x,c2),c1).  [ur(13,b,23,a)].

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.01) seconds.
% Length of proof is 12.
% Level of proof is 3.
% Maximum clause weight is 11.000.
% Given clauses 48.

3 poset(pl(x,y),z) <-> poset(x,z) & poset(y,z) # label(non_clause).  [assumption].
5 poset(x,pl(y,z)) -> poset(x,y) | poset(x,z) # label(non_clause).  [assumption].
6 (all x all y (poset(x,y) | poset(y,x))) # label(non_clause) # label(goal).  [goal].
7 poset(x,x).  [assumption].
12 -poset(pl(x,y),z) | poset(x,z).  [clausify(3)].
13 -poset(pl(x,y),z) | poset(y,z).  [clausify(3)].
21 -poset(x,pl(y,z)) | poset(x,y) | poset(x,z).  [clausify(5)].
22 -poset(c1,c2).  [deny(6)].
23 -poset(c2,c1).  [deny(6)].
59 -poset(pl(c1,x),c2).  [ur(12,b,22,a)].
65 -poset(pl(x,c2),c1).  [ur(13,b,23,a)].
267 $F.  [ur(21,b,65,a,c,59,a),unit_del(a,7)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=48. Generated=728. Kept=259. proofs=1.
Usable=39. Sos=126. Demods=15. Limbo=1, Disabled=109. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=468. Back_subsumed=4.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=23 (0 lex), Back_demodulated=89. Back_unit_deleted=0.
Demod_attempts=3553. Demod_rewrites=237.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=511. Nonunit_bsub_feature_tests=421.
Megabytes=0.31.
User_CPU=0.01, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 81260 exit (max_proofs) Sat Nov 28 21:25:18 2020
